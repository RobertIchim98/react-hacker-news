{"ast":null,"code":"var _jsxFileName = \"/Volumes/CollegeWork/ReactInterview/hacker-news-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { getNewStoryIds } from \"./APICalls/getApiStories\";\nimport { StoryTemplate } from \"./WebsiteElements/StoryTemplate\";\nimport { NavBar } from \"./WebsiteElements/NavBar\";\nimport ReactPaginate from \"react-paginate\";\nimport { any } from \"async\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [newStories, setnewStories] = useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [currentPageData, setCurrentPageData] = useState(); //dictates how many posts a page\n\n  const PER_PAGE = 10;\n  useEffect(() => {\n    getNewStoryIds().then(stories => {\n      setnewStories(stories);\n      setCurrentPageData(stories => stories.slice(offset, offset + PER_PAGE).map(storyId => {\n        return /*#__PURE__*/_jsxDEV(StoryTemplate, {\n          storyId: storyId\n        }, storyId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 18\n        }, this);\n      }));\n    });\n  }, []);\n\n  function handlePageClick({\n    selected: selectedPage\n  }) {\n    setCurrentPage(selectedPage);\n  }\n\n  const offset = currentPage * PER_PAGE;\n  /*\n  const currentPageData = newStories\n    .slice(offset, offset + PER_PAGE)\n    .map((storyId) => {\n      return <StoryTemplate storyId={storyId} key={storyId} />;\n    });\n    */\n\n  const pageCount = Math.ceil(newStories.length / PER_PAGE);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-margin\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), currentPageData, /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        pageCount: pageCount,\n        onPageChange: handlePageClick,\n        containerClassName: \"pagination\",\n        previousLinkClassName: \"pagination__link\",\n        nextLinkClassName: \"pagination__link\",\n        disabledClassName: \"pagination__link--disabled\",\n        activeClassName: \"pagination__link--active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"sOBn+xYqQxmoTt3r8xL4QchwV1c=\");\n\n_c = App;\nexport default App;\n/*\n\n{newStories.map((storyId) => (\n          <StoryTemplate storyId={storyId} key={storyId} />\n        ))}\n\n        */\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Volumes/CollegeWork/ReactInterview/hacker-news-react/src/App.js"],"names":["useEffect","useState","getNewStoryIds","StoryTemplate","NavBar","ReactPaginate","any","App","newStories","setnewStories","currentPage","setCurrentPage","currentPageData","setCurrentPageData","PER_PAGE","then","stories","slice","offset","map","storyId","handlePageClick","selected","selectedPage","pageCount","Math","ceil","length"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,SAASC,aAAT,QAA8B,iCAA9B;AACA,SAASC,MAAT,QAAuB,0BAAvB;AAEA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,GAAT,QAAoB,OAApB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACW,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,EAAtD,CAHgB,CAKhB;;AACA,QAAMa,QAAQ,GAAG,EAAjB;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,cAAc,GAAGa,IAAjB,CAAuBC,OAAD,IAAa;AACjCP,MAAAA,aAAa,CAACO,OAAD,CAAb;AACAH,MAAAA,kBAAkB,CAAEG,OAAD,IACjBA,OAAO,CAACC,KAAR,CAAcC,MAAd,EAAsBA,MAAM,GAAGJ,QAA/B,EAAyCK,GAAzC,CAA8CC,OAAD,IAAa;AACxD,4BAAO,QAAC,aAAD;AAAe,UAAA,OAAO,EAAEA;AAAxB,WAAsCA,OAAtC;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,CADgB,CAAlB;AAKD,KAPD;AAQD,GATQ,EASN,EATM,CAAT;;AAWA,WAASC,eAAT,CAAyB;AAAEC,IAAAA,QAAQ,EAAEC;AAAZ,GAAzB,EAAqD;AACnDZ,IAAAA,cAAc,CAACY,YAAD,CAAd;AACD;;AAED,QAAML,MAAM,GAAGR,WAAW,GAAGI,QAA7B;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;;AAEE,QAAMU,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUlB,UAAU,CAACmB,MAAX,GAAoBb,QAA9B,CAAlB;AAEA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAEGF,eAFH,eAGE,QAAC,aAAD;AACE,QAAA,SAAS,EAAEY,SADb;AAEE,QAAA,YAAY,EAAEH,eAFhB;AAGE,QAAA,kBAAkB,EAAE,YAHtB;AAIE,QAAA,qBAAqB,EAAE,kBAJzB;AAKE,QAAA,iBAAiB,EAAE,kBALrB;AAME,QAAA,iBAAiB,EAAE,4BANrB;AAOE,QAAA,eAAe,EAAE;AAPnB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CApDD;;GAAMd,G;;KAAAA,G;AAsDN,eAAeA,GAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { getNewStoryIds } from \"./APICalls/getApiStories\";\n\nimport { StoryTemplate } from \"./WebsiteElements/StoryTemplate\";\nimport { NavBar } from \"./WebsiteElements/NavBar\";\n\nimport ReactPaginate from \"react-paginate\";\nimport { any } from \"async\";\n\nconst App = () => {\n  const [newStories, setnewStories] = useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [currentPageData, setCurrentPageData] = useState();\n\n  //dictates how many posts a page\n  const PER_PAGE = 10;\n\n  useEffect(() => {\n    getNewStoryIds().then((stories) => {\n      setnewStories(stories);\n      setCurrentPageData((stories) =>\n        stories.slice(offset, offset + PER_PAGE).map((storyId) => {\n          return <StoryTemplate storyId={storyId} key={storyId} />;\n        })\n      );\n    });\n  }, []);\n\n  function handlePageClick({ selected: selectedPage }) {\n    setCurrentPage(selectedPage);\n  }\n\n  const offset = currentPage * PER_PAGE;\n\n  /*\n  const currentPageData = newStories\n    .slice(offset, offset + PER_PAGE)\n    .map((storyId) => {\n      return <StoryTemplate storyId={storyId} key={storyId} />;\n    });\n    */\n\n  const pageCount = Math.ceil(newStories.length / PER_PAGE);\n\n  return (\n    <main>\n      <div className=\"page-margin\">\n        <NavBar />\n        {currentPageData}\n        <ReactPaginate\n          pageCount={pageCount}\n          onPageChange={handlePageClick}\n          containerClassName={\"pagination\"}\n          previousLinkClassName={\"pagination__link\"}\n          nextLinkClassName={\"pagination__link\"}\n          disabledClassName={\"pagination__link--disabled\"}\n          activeClassName={\"pagination__link--active\"}\n        />\n      </div>\n    </main>\n  );\n};\n\nexport default App;\n\n/*\n\n{newStories.map((storyId) => (\n          <StoryTemplate storyId={storyId} key={storyId} />\n        ))}\n\n        */\n"]},"metadata":{},"sourceType":"module"}