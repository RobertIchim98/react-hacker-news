{"ast":null,"code":"var _jsxFileName = \"/Volumes/CollegeWork/ReactInterview/hacker-news-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { getNewStoryIds } from \"./APICalls/getApiStories\";\nimport { StoryTemplate } from \"./WebsiteElements/StoryTemplate\";\nimport ReactPaginate from \"react-paginate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [newStories, setnewStories] = useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [searchTerm, setSearchTerm] = useState([]);\n  const [isSearch, setisSearch] = useState(false); //dictates how many posts a page\n\n  const PER_PAGE = 10;\n  useEffect(() => {\n    getNewStoryIds().then(stories => {\n      setnewStories(stories);\n    });\n  }, []);\n\n  const handlePageClick = ({\n    selected: selectedPage\n  }) => {\n    setCurrentPage(selectedPage);\n  };\n\n  const offset = currentPage * PER_PAGE;\n  const currentPageData = newStories.slice(offset, offset + PER_PAGE).map(storyId => {\n    return /*#__PURE__*/_jsxDEV(StoryTemplate, {\n      storyId: storyId\n    }, storyId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 14\n    }, this);\n  });\n\n  const displayStories = () => {\n    if (searchTerm == \"\") {\n      return /*#__PURE__*/_jsxDEV(StoryTemplate, {\n        storyId: storyId,\n        searchTerm: searchTerm\n      }, storyId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n    } else {}\n  };\n\n  const pageCount = Math.ceil(newStories.length / PER_PAGE);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Hacker News\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-tool\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"news-filter\",\n          placeholder: \"Search Article\",\n          onChange: term => {\n            setSearchTerm(term.target.value);\n            setisSearch(true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-margin\",\n      children: [isSearch ? null : currentPageData, /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        pageCount: pageCount,\n        onPageChange: handlePageClick,\n        containerClassName: \"pagination\",\n        previousLinkClassName: \"pagination__link\",\n        nextLinkClassName: \"pagination__link\",\n        disabledClassName: \"pagination__link--disabled\",\n        activeClassName: \"pagination__link--active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Vx8O0LfPiWsqFOBRUVdWp4+QCoE=\");\n\n_c = App;\nexport default App;\n/*\n\n{newStories.map((storyId) => (\n          <StoryTemplate storyId={storyId} key={storyId} />\n        ))}\n\n        */\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Volumes/CollegeWork/ReactInterview/hacker-news-react/src/App.js"],"names":["useEffect","useState","getNewStoryIds","StoryTemplate","ReactPaginate","App","newStories","setnewStories","currentPage","setCurrentPage","searchTerm","setSearchTerm","isSearch","setisSearch","PER_PAGE","then","stories","handlePageClick","selected","selectedPage","offset","currentPageData","slice","map","storyId","displayStories","pageCount","Math","ceil","length","term","target","value"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { getNewStoryIds } from \"./APICalls/getApiStories\";\n\nimport { StoryTemplate } from \"./WebsiteElements/StoryTemplate\";\n\nimport ReactPaginate from \"react-paginate\";\n\nconst App = () => {\n  const [newStories, setnewStories] = useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [searchTerm, setSearchTerm] = useState([]);\n  const [isSearch, setisSearch] = useState(false);\n\n  //dictates how many posts a page\n  const PER_PAGE = 10;\n\n  useEffect(() => {\n    getNewStoryIds().then((stories) => {\n      setnewStories(stories);\n    });\n  }, []);\n\n  const handlePageClick = ({ selected: selectedPage }) => {\n    setCurrentPage(selectedPage);\n  };\n\n  const offset = currentPage * PER_PAGE;\n\n  const currentPageData = newStories\n    .slice(offset, offset + PER_PAGE)\n    .map((storyId) => {\n      return <StoryTemplate storyId={storyId} key={storyId} />;\n    });\n\n  const displayStories = () => {\n    if (searchTerm == \"\") {\n      return (\n        <StoryTemplate\n          storyId={storyId}\n          searchTerm={searchTerm}\n          key={storyId}\n        />\n      );\n    } else {\n    }\n  };\n\n  const pageCount = Math.ceil(newStories.length / PER_PAGE);\n\n  return (\n    <main>\n      <header>\n        <div className=\"header-logo\">\n          <p>Hacker News</p>\n        </div>\n        <div className=\"header-tool\">\n          <input\n            type=\"text\"\n            name=\"news-filter\"\n            placeholder=\"Search Article\"\n            onChange={(term) => {\n              setSearchTerm(term.target.value);\n              setisSearch(true);\n            }}\n          />\n        </div>\n      </header>\n\n      <div className=\"page-margin\">\n        {isSearch ? null : currentPageData}\n        <ReactPaginate\n          pageCount={pageCount}\n          onPageChange={handlePageClick}\n          containerClassName={\"pagination\"}\n          previousLinkClassName={\"pagination__link\"}\n          nextLinkClassName={\"pagination__link\"}\n          disabledClassName={\"pagination__link--disabled\"}\n          activeClassName={\"pagination__link--active\"}\n        />\n      </div>\n    </main>\n  );\n};\n\nexport default App;\n\n/*\n\n{newStories.map((storyId) => (\n          <StoryTemplate storyId={storyId} key={storyId} />\n        ))}\n\n        */\n"]},"metadata":{},"sourceType":"module"}